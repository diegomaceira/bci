Instrucciones de construccion del proyecto microservicio bci:

-el proyecto se encuentra alojado en un repositorio git publico:
https://github.com/diegomaceira/bci

-se puede descargar haciendo un git clone mediante 
SSH:
	git@github.com:diegomaceira/bci.git
o HTTPS:
	https://github.com/diegomaceira/bci.git
	
-una vez descargado el proyecto se importa a eclipse o intellij
haciendo un import "Existing gradle project".

-Una vez importado el proyecto, se tiene que correr los comando clean y luego build
de gradle para que termine de descargar las dependencias.

-por ultimo el proyecto se ejecuta dandole boton derecho a la clase BciApplication.java
"run as" -> "java application"

-Se pueden llamar a los endpoints utilizando la herramientas postman o tambien mediante curl,
en mi caso utilize postman.
El proyecto consta de 3 endpoints, dos metodos get, uno para obtener todos los usuarios y el otro para obtenerlo uno solo.

http://localhost:8080/login 

http://localhost:8080/login/{id}

y un metodo post, para el alta del usuario. 

http://localhost:8080/sign-up

el siguiente input se utiliza dentro del body para saber que datos tiene que dar de alta el programa, los telefonos son una lista
por lo cual podria tener varios telefonos asociados.

{
   "name":"diego maceira",
   "email":"macei@google.com",
   "password":"asdb1sdA34",
   "phones":[
      {
         "number":"1234",
         "citycode":"1",
         "contrycode":"ARG"
      }, {
         "number":"234",
         "citycode":"2",
         "contrycode":"CHI"
      },.........
   ]
}

en caso de que usuario tenga un password con formato incorrecto devuelve un error, en caso de que el mail sea invalido devuelve otro error
y en caso de que el mail del usuario ya se encuentre dado de alta, tambien devuelve otro error con la descripcion correspondiente:

{
    "error": [
        {
            "timestamp": "ago 22, 2022 14:12:32 PM",
            "codigo": 400,
            "detail": "Formato de email invalido"
        },
        {
            "timestamp": "ago 22, 2022 14:12:32 PM",
            "codigo": 400,
            "detail": "Formato de password invalido"
        }
    ]
}

En el header de cada peticion es importante definir la siguiente clave valor:
content-type: application/json 
ya que los endpoints expuestos, solo consumen y generan json.

-El proyecto tambien cuenta con una consola H2 para visualizar las tablas de base de datos
y las modificaciones que se realizan sobre ellas:

http://localhost:8080/h2-console